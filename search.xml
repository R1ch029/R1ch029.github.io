<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>AWD docker环境</title>
      <link href="/2022/02/14/awd-docker-github-glzjin20190511-awd-docker-2019-nian-5-yue-11-ri-fang-zai-ke-ji-xue-yuan-ying-ji-tiao-zhan-bei-da-xue-sheng-wang-luo-an-quan-yao-qing-sai-awd-ba-ji-ti-mu/"/>
      <url>/2022/02/14/awd-docker-github-glzjin20190511-awd-docker-2019-nian-5-yue-11-ri-fang-zai-ke-ji-xue-yuan-ying-ji-tiao-zhan-bei-da-xue-sheng-wang-luo-an-quan-yao-qing-sai-awd-ba-ji-ti-mu/</url>
      
        <content type="html"><![CDATA[<p><a href="https://github.com/glzjin/20190511_awd_docker">GitHub - glzjin&#x2F;20190511_awd_docker: 2019 年 5 月 11 日防灾科技学院 “应急挑战杯” 大学生网络安全邀请赛 AWD 靶机题目。</a></p>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWD </tag>
            
            <tag> 环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google Hacking</title>
      <link href="/2022/02/13/google-hacking-gu-ge-yu-fa/"/>
      <url>/2022/02/13/google-hacking-gu-ge-yu-fa/</url>
      
        <content type="html"><![CDATA[<h3 id="基础篇："><a href="#基础篇：" class="headerlink" title="基础篇："></a>基础篇：</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">* intitle：搜索网页标题中包含有特定字符的网页。例如intitle: 后台，这样网页标题中带有‘后台’的网页都会被搜索出来。* inurl：搜索包含有特定字符的URL。例如inurl:admin，可以用来查找网站后台。* intext: 搜索网页正文内容中的指定字符，例如intext:操作系统。可以搜索含有‘操作系统’的页面* Filetype: 搜索指定类型的文件。例如操作系统　filetype:pdf，就可以找到关于操作系统的pdf文档。* Site：找到与指定网站有联系的URL。例如Site：baidu.com。所有和这个网站有联系的URL都会被显示。* movie: 当我们用movie提交查询的时候，Google会返回跟查询关键词相关的电影信息。<span class="token punctuation">(</span>当前只支持英文Google<span class="token punctuation">)</span>* info: 查询网站的一些信息。例如info:bbs.byr.cn，它只会返回一个结果，是一个选择列表，列表的选项是这个网站的某一方面的信息。info<span class="token operator">=</span>cache+related+link+site+intext+intitle。* 双引号: 代表完全匹配，使关键词不分开，顺序都不能变。* 减号: 减号与前一个关键词之间一定要有一个空格，与后一个关键词之间一定不能有空格。搜索结果为，匹配前一个关键词但不匹配后一个关键词的结果。例如seo -搜索引擎。* AND: 逻辑与，这个命令我们其实一直都在用，只是没有意识到。一般用空格代替，还可以用“+”代替。例如霹雳布袋+败亡之剑，返回的结果同时包含两者。* weather: 查询某一地区或城市的天气。不过我们这一地区或城市必须是Google能识别的，例weather:beijing，Google将会给我们返回北京的天气。* 星号（*）: 通配符，可以匹配任意字符串。例如搜索*擎，则返回的结果中不仅有“搜索引擎”，还有“搜索巨擎”之类的。* allinurl: 结果的url中包含多个关键词。例如allinurl:byr jobs，等于inurl:byr inurl:jobs。allinurl也是排他性指令* define: 查询关键词的词义，起的是字典的作用。Google会返回包含查询关键词定义的网页，例define:computer，支持汉字哦！<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="进阶"><a href="#进阶" class="headerlink" title="进阶:"></a>进阶:</h3><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token operator">*</span> 查找后台地址：site<span class="token punctuation">:</span>域名inurl<span class="token symbol">:login</span><span class="token operator">|</span>admin<span class="token operator">|</span>manage<span class="token operator">|</span>member<span class="token operator">|</span>admin_login<span class="token operator">|</span>login_admin<span class="token operator">|</span>system<span class="token operator">|</span>login<span class="token operator">|</span>user<span class="token operator">|</span>main<span class="token operator">|</span>cms<span class="token operator">*</span> 查找文本内容：site<span class="token punctuation">:</span>域名 intext<span class="token punctuation">:</span>管理<span class="token operator">|</span>后台<span class="token operator">|</span>登陆<span class="token operator">|</span>用户名<span class="token operator">|</span>密码<span class="token operator">|</span>验证码<span class="token operator">|</span>系统<span class="token operator">|</span>帐号<span class="token operator">|</span>admin<span class="token operator">|</span>login<span class="token operator">|</span>sys<span class="token operator">|</span>managetem<span class="token operator">|</span>password<span class="token operator">|</span>username<span class="token operator">*</span> 查找可注入点：site<span class="token punctuation">:</span>域名 inurl<span class="token symbol">:aspx</span><span class="token operator">|</span>jsp<span class="token operator">|</span>php<span class="token operator">|</span>asp<span class="token operator">*</span> 查找上传漏洞：site<span class="token punctuation">:</span>域名 inurl<span class="token symbol">:file</span><span class="token operator">|</span>load<span class="token operator">|</span>editor<span class="token operator">|</span><span class="token constant">Files</span><span class="token operator">*</span> 查看脚本类型：site<span class="token punctuation">:</span>域名 filetype<span class="token symbol">:asp</span><span class="token operator">/</span>aspx<span class="token operator">/</span>php<span class="token operator">/</span>jsp<span class="token operator">*</span> 迂回策略：inurl<span class="token symbol">:cms</span><span class="token operator">/</span>data<span class="token operator">/</span>templates<span class="token operator">/</span>images<span class="token regex">/index/</span><span class="token operator">*</span> 网络设备关键词：intext<span class="token symbol">:WEB</span> <span class="token constant">Management</span> <span class="token constant">Interface</span> <span class="token keyword">for</span> <span class="token constant">H3C</span> <span class="token constant">SecPath</span> <span class="token constant">Series</span><span class="token operator">*</span> 存在的数据库：site<span class="token punctuation">:</span>域名 filetype<span class="token symbol">:mdb</span><span class="token operator">|</span>asp<span class="token operator">|</span><span class="token comment">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">使用 &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Alt&lt;&#x2F;kbd&gt;+&lt;kbd&gt;Del&lt;&#x2F;kbd&gt; 重启电脑<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 信息收集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 谷歌语法 </tag>
            
            <tag> Google Hacking </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7网络配置</title>
      <link href="/2022/02/11/centos-7-wang-luo-pei-zhi/"/>
      <url>/2022/02/11/centos-7-wang-luo-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>一般情况下在 VM Ware中安装CentOS都是使用NAT模式连接网络 并且 CentOs安装完是无法上网的 需要手动惊醒配置</p><p>1.在VM Ware中选择“编辑”&gt;”虚拟网络编辑器” 弹出“虚拟网络编辑器弹窗” 选择更改设置</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211205806847.png" alt="虚拟网络编辑器"></p><p>选择VMnet8 取消勾选“使用本地DHCP服务讲ip地址分给虚拟机” 子网IP可以自己改 只能第三个 </p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210302839.png"></p><p>选择NAT设置 设置网关 并且记住</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210341814.png"></p><p>2.右击状态栏中的WIFI图标</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210431712.png" alt="WIFI"></p><p>选择“打开网络和internet设置” </p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210551449.png" alt="打开网络和internet设置"></p><p>选择更改适配器选项 弹出“网络连接”对话框</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210720482.png" alt="网络连接"></p><p>选择“VM net8” 点击“属性” 选择“internet 协议版本4(TCP&#x2F;IPv6)”</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210905742.png" alt="internet 协议版本4(TCP/IPv6)"></p><p>设置为自定义ip</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210950500.png" alt="ip设置"></p><p>3.开启虚拟机 </p><p>输入 ip addr 查看一下网卡信息</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211211316370.png" alt="网卡信息"></p><p>我们要找的是&lt;BROADCAST….&gt;这一个 记住前面的名字 如ens33</p><p>然后修改网卡的信息 输入命令</p><pre class="line-numbers language-none"><code class="language-none">vi &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-ens33<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>  后面的ens33根据自己网卡名称来敲（按i键进入输入模式）</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211211739097.png" alt="修改网卡信息"></p><pre class="line-numbers language-none"><code class="language-none">BOOTPROTO&#x3D;staticONBOOT&#x3D;yesIPADDR&#x3D;192.168.X.X      &#x2F;&#x2F;第一个X是网段 第二个X是虚拟机ipNETWASK&#x3D;255.255.255.0GATEWAY&#x3D;192.168.X.X   &#x2F;&#x2F;如192.168.129.2这里网关要跟前面<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>NAT设置的相同</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211210341814.png"></p><p>修改完后按ESC键 再输入</p><pre class="line-numbers language-none"><code class="language-none">:wq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>保存退出 </p><pre class="line-numbers language-none"><code class="language-none">ping www.baidu.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>测试一下</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211212639313.png" alt="测试成功"></p>]]></content>
      
      
      <categories>
          
          <category> CentOS 7 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu网络配置</title>
      <link href="/2022/02/11/ubuntu-wang-luo-pei-zhi/"/>
      <url>/2022/02/11/ubuntu-wang-luo-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>在&#x2F;etc&#x2F;netplan目录下查看文件</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220211232154043.png"></p><p>名称不固定 用vi编辑</p><p>打开后把内容全删掉 </p><pre class="line-numbers language-none"><code class="language-none">network:    ethernets:        ens33:                  # 配置的网卡名称            dhcp4: no           # 关闭dhcp4            dhcp6: no           # 关闭dhcp6            addresses: [192.168.0.120&#x2F;24]       # 设置本机IP地址及掩码            gateway4: 192.168.0.1               # 设置网关            nameservers:                    addresses: [114.114.114.114, 8.8.8.8]       # 设置DNS    version: 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编辑好ip和网关后直接粘贴</p><p>然后</p><pre class="line-numbers language-none"><code class="language-none">netplan apply<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>重启一下网卡 再ping一下百度即可</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Burpsuite详细安装教程</title>
      <link href="/2022/01/24/burpsuite-xiang-xi-an-zhuang-jiao-cheng/"/>
      <url>/2022/01/24/burpsuite-xiang-xi-an-zhuang-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>视频教程：<a href="https://www.bilibili.com/video/BV16P4y1P7sL?spm_id_from=333.999.0.0">https://www.bilibili.com/video/BV16P4y1P7sL?spm_id_from=333.999.0.0</a></p><p>java下载链接：<a href="https://www.aliyundrive.com/s/HL5rN7mCydN">https://www.aliyundrive.com/s/HL5rN7mCydN</a></p><p>burpsuite下载链接：<a href="https://www.aliyundrive.com/s/JTUS6o8xE2T">https://www.aliyundrive.com/s/JTUS6o8xE2T</a></p><p>1.安装java环境 下载后安装 一直下一步 jdk81u31</p><p>2.测试java环境是否安装成功 cmd下java</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220124010845012.png"></p><p>3.找到burp-loader-keygen.jar文件，双击打开，</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/5698253-d754bdc9397e607e.png"></p><p>填一下License Text(随意)，然后点击Run即可启动BurpSuite的主程序</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/5698253-a0585639f3c2a6ca.png"></p><p>将keygen中得到的License复制粘贴到这里然后点击Next</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/5698253-87341ece85460e12.png"></p><p>点击这个后出现下一个界面</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/5698253-4c4f3fc949b49f16.png"></p><p>点击Copy request，复制完成之后，将字符串粘贴到keygen的Activation Request框里，然后Activation Response框里就有了结果，如下</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/5698253-d43cc7288bdf576e.png"></p><p>复制完后，将字符串粘贴到BurpSuite剩下的那个框里，如图</p><p><img src="https://upload-images.jianshu.io/upload_images/5698253-1a6e5e97856a91c5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/518/format/webp"></p><p>再点击Next显示激活成功</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/5698253-6c8d0df3724743f9.png"></p><p>再次启动burpsuite时直接双击”1.bat”即可</p><p><strong>火狐安装foxyproxy</strong></p><p>点击浏览器右上角三条杠&gt;扩展与主题</p><p>输入框内输入<strong>foxyproxy</strong>搜索</p><p>选择第一个添加 浏览器右上角出现foxyproxy</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220124012242994.png"></p><p>点击选择 左边添加</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220124012322620.png"></p><p>设置代理和端口</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220124012352137.png"></p><p><strong>注意：端口要与burpsuite设置的端口相同</strong></p><p>burpsuite设置端口方式</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220124012505850.png"></p><p>浏览器挂代理即可进行抓包</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220124012604531.png"></p>]]></content>
      
      
      <categories>
          
          <category> 安装教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Burpsuite </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-web进阶 web_php_include</title>
      <link href="/2022/01/22/gong-fang-shi-jie-web-jin-jie-web-php-include/"/>
      <url>/2022/01/22/gong-fang-shi-jie-web-jin-jie-web-php-include/</url>
      
        <content type="html"><![CDATA[<p>进入题目</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707163923303.png"></p><p>一串简短的PHP代码，这里对page这个参数用str_replace函数进行了过滤，str_replace函数的作用是匹配前面一段字符，匹配到的话就替换成后面一段，所以这里的代码意思就是，假如我们传入的page参数包含php:&#x2F;&#x2F;就会被替换成空字符。并且判断page里面文件是否存在，存在则包含文件。</p><p>当然这题有多种解法，我这里就讲述三种。</p><h6 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a><strong>第一种</strong></h6><p>绕过str_replace函数，对渗透测试有点了解的都知道str_replace这个函数及其不安全，可以利用大小写绕过，双写绕过等，这里我用大小写绕过演示给大家看看。</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707165806928.png"></p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707165913410.png" alt="img"> </p><p>即可得到flag。</p><h6 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a><strong>第二种</strong></h6><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707170147415.png"></p><p>这里还传入了一个hello，好奇心让我试了试。</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707170249180.png"></p><p>我发现这个hello是有回显的，所以说不定这里可以命令执行然后回显到浏览器。</p><p>然后我们构造payload，首先要构造hello这个参数我们必须先让我们传进的page参数为真才行。</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707171018153.png"></p><p>让page参数用http伪协议访问127.0.0.1这个条件肯定为真</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707171441508.png"></p><h6 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a><strong>第三种</strong></h6><p>用御剑扫描后台，会扫到phpmyadmin</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707171629347.png"></p><p>试了试弱口令，账号root密码空还真登入进去了</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/20200707171732965.png"></p><p>接下来就是写入一句话了，这个自行百度了。</p>]]></content>
      
      
      <categories>
          
          <category> Write Up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界-汤姆有个好主意</title>
      <link href="/2022/01/20/gong-fang-shi-jie-tang-mu-you-ge-hao-zhu-yi/"/>
      <url>/2022/01/20/gong-fang-shi-jie-tang-mu-you-ge-hao-zhu-yi/</url>
      
        <content type="html"><![CDATA[<p>下载是张图片 拖到kali里面binwalk发现有不少文件</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120211750320.png"></p><p>然后foremost -T 文件名</p><p>得到一个压缩包 拖到windows中解压 有个hint提示跟两张一样的图片</p><p>hint翻译过来是<img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120211947223.png"></p><p>找像素 那能想到的就合并 </p><p>steg.jar</p><p>合并完了</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120212144431.png"></p><p>save 用ps打开 把曝光拉到最大 得到二维码</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120212225497.png"></p><p>得到flag</p>]]></content>
      
      
      <categories>
          
          <category> Write UP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Misc </tag>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界高手进阶 What-is-this</title>
      <link href="/2022/01/20/gong-fang-shi-jie-gao-shou-jin-jie-what-is-this/"/>
      <url>/2022/01/20/gong-fang-shi-jie-gao-shou-jin-jie-what-is-this/</url>
      
        <content type="html"><![CDATA[<p>下载后一个压缩包</p><p>解压得到没有文件格式的文件</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120162555770.png"></p><p>直接解压 解压完了发现还是没有格式的文件 连着重复三次 得到两个图片</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120191710528.png"></p><p>使用stegsolve.jar打开图一 然后</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120191813598.png"></p><p>然后选最后一个 打开图二</p><p>得到flag</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220120191912513.png"></p><p>主要是碰到了一个还没刷到过的题型 还是得多刷题</p>]]></content>
      
      
      <categories>
          
          <category> Write Up </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
            <tag> misc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF简单笔记</title>
      <link href="/2022/01/13/ctf-jian-dan-bi-ji/"/>
      <url>/2022/01/13/ctf-jian-dan-bi-ji/</url>
      
        <content type="html"><![CDATA[<p><strong>远程开启kali桌面命令：sudo &#x2F;etc&#x2F;init.d&#x2F;xrdp start</strong></p><p><strong>CTF：①Misc：杂项 ②Crypto：密码安全 ③Web安全 ④Reverse：逆向工程 ⑤Pwn</strong></p><p><strong>#杂项：</strong></p><pre><code>1、文件操作与隐写2、图片隐写术3、压缩文件处理4、流量取证技术1234567</code></pre><h6 id="1、文件操作与隐写"><a href="#1、文件操作与隐写" class="headerlink" title="1、文件操作与隐写"></a><strong>1、文件操作与隐写</strong></h6><p><strong>#命令就是一个对应的工具，只是这个工具没有对应的图形化界面而已</strong></p><pre><code>（1）、File：解析文件头（2）、winhex：十六进制文件编辑器（3）、010edit notepad++  （看头地址的前四个的值判断文件类型）123</code></pre><p><strong>#文件头缺失：</strong></p><p><strong>使用场景 文件头部残缺或文件头部字段错误无法打开正常文件（file 文件名 &#x3D;&#x3D; Data）</strong></p><p>   <strong>使用010edit，修复文件头</strong></p><pre><code>123</code></pre><p><strong>#文件分离操作：图片种子 把很多文件融合成一张图片</strong></p><pre><code>分析文件：binwalk 文件名分离文件：binwalk -e 文件名  遇到压缩包会进行自动解压foremost 文件名 -o 输出目录名使用dd实现文件的手动分离    格式：dd if=源文件 of=目标文件名 bs=1 count=xx skip=开始分离的字节数    参数说明：        if=file  #输入文件名，缺省为标准输入        of=file  #输出文件名，缺省为标准输出        bs=bytes #同时设置读写块的大小为bytes，可以代替ibs和obs        skip=blocks #从输入文件开头跳过blocks个块后再开始复制        count    #总共要读取count个块010edit：选中，右键，select，save selection将16进制字符文件导入保存操作方法：010edit：File 中的Import Hexagon另存为....12345678910111213</code></pre><p><strong>#文件合并：</strong></p><pre><code>给一个MD5值计算文件的完整性1、Linux下的文件合并    cat 文件1 文件2 文件3 &gt; 文件.xxx    校验文件的md5值：(命令)md5sum 文件名2、Windows下的文件合并    copy /B 文件1+文件2+文件3  文件.xxx    certutil -hashfile 文件 md51234567</code></pre><p><strong>#文件内容隐写：</strong></p><pre><code>查找功能1</code></pre><h6 id="2、图片隐写术"><a href="#2、图片隐写术" class="headerlink" title="2、图片隐写术"></a><strong>2、图片隐写术</strong></h6><p><strong>#题型：</strong></p><pre><code>细微的颜色差别GIF图多帧隐藏    1、颜色通道隐藏    2、不同帧图信息隐藏    3、不同帧对比隐写Exif信息隐藏图片修复    1、图片头修复    2、图片尾修复    3、CRC校验修复    4、长宽高修复最低有效位LSB隐写 8个进制位，将数据藏在最低有效位中图片加密    1、Stegdetect    2、outguess    3、Jphide    4、F51234567891011121314151617</code></pre><p><strong>#常用工具：</strong></p><p><strong>1、Firework</strong>：查看隐写的图片文件<br><strong>2、Exif</strong>：打开属性（给提示）Windows<br>        <strong>exitfool 文件名 Linux</strong><br><strong>3、Stegsolve（隐写题）</strong>：两张图片的信息基本相同**<br>    修改打开方式：bin&#x2F;javaw.exe 修改注册表：HKEY_CLASSES_ROOT\Applications\javaw.exe\shell\open\command   在中间添加 -jar （需要空格）<br>    用来筛选最低有效位 Analyse–&gt;Data Extract–&gt;三基色：RGB<br><strong>4、zsteg需要在线安装（隐写）</strong>  root@kali:&#x2F;# gem install zsteg<br>    detect stegano-hidden data in PNG &amp; BMP<br>    检测LSB隐写   zsteg xxx.png&#x2F;bmp<br><strong>5、wbstego4工具（最低有效位）</strong>：针对.bmp&#x2F;.pdf**<br>    得到的_is文件用notepad++打开<br><strong>6、画图：图片格式转换</strong><br><strong>7、python脚本来处理</strong>（图片隐写LSB）<br><strong>8、TweakPNG</strong>：文件头正常却无法打开文件，利用TweakPNG修改CRC<br>    1、CRC校验错误<br>    2、高度错误导致CRC错误，需要修改高度.  计算脚本<br>        CRC上一行之后的8个字节，前四个为宽度，后四个为高度（十六进制下的第二行前八位）<br>    如果修改完CRC还没有获得flag，则为高度或者宽度问题，因为高度和宽度的改变引起了<br>    计算出来的CRC不正确，则在运行脚本时候的CRC为原本正确的CRC值<br><strong>9、Bftools</strong>：用于解密图片信息<br>    使用场景：在windows的cmd下，对加密过的图片文件进行解密<br>    格式：<br>    Bftools.exe decode braincopter 要解密的图片名称 -output 输出文件名<br>    Bftools.exe run 上一步输出的文件<br><strong>10、SlientEye</strong><br>    使用场景：windows下打开silentEye工具，对加密的图片进行解密<br>    方法：使用silentEye程序打开目标图片，点击image-&gt;decode，点击decode,可以查看隐藏文件，点击保存即可<br>    如果需要密码，勾选encrypted data，输入密码和确认密码，再点击decode<br>**11、Stegdetect工具探测加密方式：针对jpg<br>    命令：<br>        stegdetect xxx.jpg<br>        stegdetect -s 敏感度 xxx.jpg<br>    1)、Jphide<br>    2)、Outguess<br>        使用场景：Stegdetect识别出来或者题目提示是outguess加密的图片<br>        该工具需编译使用：.&#x2F;configure &amp;&amp; make &amp;&amp; make install<br>        格式：outguess -r 要解密的文件 输出结果的文件名<br>    3)、F5<br>        使用场景：Stegdetect识别出来是F5加密的图片或题目提示是F5加密的图片<br>        进入F5-steganography_F5目录，将图片文件拷贝至该目录下，从CMD进入该目录<br>        格式：Java Exrtact 要解密的文件名 -p 密码<br>        运行结果在目录下的output.txt看到</p><pre><code>123456789101112131415161718192021222324252627282930313233343536373839404142</code></pre><p><strong>#二维码处理：</strong></p><pre><code>1、使用二维码扫描工具CQR.exe打开图片，找到内容字段2、补全二维码3、取反123</code></pre><h6 id="3、压缩文件处理"><a href="#3、压缩文件处理" class="headerlink" title="3、压缩文件处理"></a><strong>3、压缩文件处理</strong></h6><p><strong>#伪加密</strong></p><pre><code>使用场景：伪加密文件zip方法：使用winhex打开压缩文件，找到文件头第九第十个字符，将其修改为0000        使用winhex打开文件搜索16进制504B0102，可以看到每个加密文件的头文件字段rar方法：使用winhex打开rar文件，找到第24个字节，该字节尾数为4表示加密，0表示无加密1234</code></pre><p><strong>#暴力破解</strong></p><pre><code>ARCHPR：windows下加密过的rar文件ziperello：windows下加密过的zip文件12</code></pre><p><strong>#明文攻击</strong></p><pre><code>使用场景:已知加密的zip?rar部分文件明文内容方法：    1、将.txt的明文文件进行压缩，变成.zip    2、打开archpr，攻击类型选择明文，明文文件路径选择.zip(即将明文文件不加密压缩后的文件)，    加密的文件    3、选择要破解的文件，点击开始，破解成功后会获得密码有时候会跑出加密秘钥使用该方法需要注意两个关键点：    1、有一个明文文件，压缩后CRC值与加密压缩包中的文件一致    2、明文文件的压缩算法需要与加密压缩文件的压缩算法一样（store是默认算法）12345678910</code></pre><p><strong>#RAR文件格式</strong></p><pre><code>有时候给出的RAR文件的头部各个字块会故意给错导致无法识别HEAD_CRC   2字节   所有块或块部分的CRCHEAD_TYPE  1字节   块类型HEAD_FLAGS 2字节   块标记HEAD_SIZE  2字节   块大小 #如果快标记的第一位被置1的话，还存在：    ADD_SIZE 4字节 可选结构-增加块大小那么，文件块的第三个字节为块类型，也叫头类型头类型是0x72表示是标记块头类型是0x73表示是压缩文件头块头类型是0x74表示是文件头块头类型是0x75表示是注释快……怎么看开始，看前面的到哪里结束12345678910111213</code></pre><p><strong>4、流量取证技术</strong></p><p>通常比赛中会提供一个包含流量数据的PCAP文件，有时候需要进行修复或重构传输文件后，再进行分析<br>    总体把握：<br>        协议分级<br>        端点统计<br>    过滤筛选<br>        过滤语法<br>        Host，Protocol，contains，特征值<br>    发现异常<br>        特殊字符串<br>        协议某字段<br>        flag位于服务器中<br>    数据提取<br>        字符串取<br>        文件提取<br>    流量分析可以概括为三个方向<br>        1、流量包修复<br>        2、协议分析<br>        3、数据提取</p><hr><pre><code>12345678910111213141516171819</code></pre><p><strong>#常用的过滤命令：</strong></p><pre><code>1、过滤IP，如源IP或者目标x.x.x.x    ip.src eq x.x.x.x or ip.dst eq x.x.x.x2、过滤端口    tcp.port eq 80 or udp.port eq 80    tcp.dstport == 80 只显tcp协议的目标端口为80    tcp.srcport == 80 只显tcp协议的源端口为80    tcp.port &gt;= 1 and tcp.port &lt;= 803、过滤协议    tcp/udp/arp/icmp/http/ftp/dns/ip……4、过滤MAC    eth.dst == xx.xx.xx.xx 过滤目标MAC5、包长度过滤    udp.length == xx 这个长度是指udp本身固定长度8加上udp下面那块数据包之和    tcp.len &gt;= 7 指的是ip数据包（tcp下面那块数据），不包括tcp本身    ip.len == 94 除了以太网头固定长度14，其他都算是ip.len,即从ip本身到最后    frame.len == 119 整个数据包长度，从eth开始到最后6、http模式过滤    http.request.method == &quot;GET&quot;    http.request.method == &quot;POST&quot;    http.request.uri == &quot;/img/logo-edu.gif&quot;    http contains &quot;GET&quot;    http contains &quot;HTTP/1.&quot;    http.request.method == &quot;GET&quot; &amp;&amp; http    http contains &quot;flag&quot;    http contains &quot;key&quot;    tcp contains &quot;flag&quot;1234567891011121314151617181920212223242526</code></pre><p><strong>#WireShark协议分析：</strong></p><pre><code>英文版：Statistics -&gt; Protocol Hierarchy中文版：统计 -&gt; 协议分级根据数据包特征进行筛选    右键--&gt;作为过滤器应用--&gt;选中流汇聚    右键--&gt;追踪流--&gt;....     在关注的http数据包或tcp数据包中选择流汇聚，可以将http流或tcp流汇聚或还原成数据，在弹出的框中可以看到数据内容    常见的http流关键内容：        1、html中直接包含重要信息        2、上传或下载文件内容，通常包含文件名，hash值等关键信息    常用POST请求上传        3、一句话木马，POST请求，内容包含eval，内容使用base64加密123456789101112</code></pre><p><strong>#数据提取：</strong></p><pre><code>使用wireshark自动提取通过http传输的文件内容    文件--&gt;导出对象（wireshark自带的文件分离功能）手动提取文件内容    右键--&gt;导出分组字节流 或者 点击菜单栏 文件--&gt;导出分组字节流，快捷键ctrl+h    在弹出的框中将文件保存成二进制文件12345</code></pre><p><strong>#无线wifi流量包：</strong></p><pre><code>kali系统下：aircrack-ng工具进行wifi密码破解    1、用aircrack-ng检查cap包：aircrack-ng xxx.cap        bssid：MAC地址    ESSID：wifi名字    2、用aircrack-ng跑字典进行握手包破解：aircrack-ng xxx.cap -w pass.txt1234</code></pre><p><strong>#USB流量：鼠标流量和键盘流量</strong></p><pre><code>键盘流量：        右键leftover capture data --&gt; 应用为列..        在数据包中体现，apply as column    键盘数据包的数据长度为8个字节，击键信息集中在第3个字节    Leftover Capture Data中值与具体按键的对应关系，可以参考        http://www.usb.org/developers/hidpage/Hut1_12v2.pdf        python脚本    提出方式        1、文件--&gt;导出分组解析结果--&gt;保存为一个csv文件（表格） 不好用        2、使用wireshark提供的命令行工具tshark，可以将Leftover Captuer Data数据单独复制出来            tshark -r 流量包的名字 -T fields -e usb.capdata&gt;目的文件名.txt鼠标流量：    鼠标流量的提取方式和键盘的提取方式相同    鼠标数据包的数据长度为4个字节    第一个字节代表按键，当取0x00，代表没有按键；为0x01时，代表按左键；为0x02时，代表当前按键为右键    第二个字节代表左右偏移        当值为正时，代表右移多少像素        当值为负时，代表左移多少像素    同理，第三个字节代表上下偏移.    脚本    用gnuplot工具把坐标画出来        命令：1、gnuplot              2、plot&quot;xy.txt&quot;1234567891011121314151617181920212223</code></pre><p>脚本：<br><a href="https://github.com/WangYihang/UsbMiceDataHacker//%E9%BC%A0%E6%A0%87%E6%B5%81%E9%87%8F">https://github.com/WangYihang/UsbMiceDataHacker//鼠标流量</a><br><a href="https://github.com/WangYihang/UsbKeyboardDataHacker">https://github.com/WangYihang/UsbKeyboardDataHacker</a> &#x2F;&#x2F;键盘流量<br>摘自王一航的github</p><p>#Https流量包文件分析：</p><pre><code>一般会给key导入key  Https == Http + TLS英文版：Preference--&gt;Protocols--&gt;SSL--&gt;edit RSA keys list中文版：编辑--&gt;首选项--&gt;Protocols--&gt;SSL--&gt;Edit RSA keys list</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows开启apache服务</title>
      <link href="/2022/01/12/shi-yong-phpstudy-zai-windows-shang-da-jian-apache-huan-jing/"/>
      <url>/2022/01/12/shi-yong-phpstudy-zai-windows-shang-da-jian-apache-huan-jing/</url>
      
        <content type="html"><![CDATA[<p>1.在官网下载phpstudy</p><p><a href="https://www.xp.cn/">https://www.xp.cn/</a></p><p>2.找到安装包 点击安装 一直下一步 默认安装到D盘下</p><p>3.安装完成后打开</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220112220920176.png"></p><p>启动apache</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220112222738853.png"></p><p>apache服务开启 在D:&#x2F;phpstudy_pro&#x2F;www目录下面写php文件 在浏览器查看就可以运行了</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220112221356530.png"></p><p>注意我1.php所在文件位置还有文件格式</p><p>在浏览器输入localhost&#x2F;1.php查看运行结果</p><p><img src="https://gitee.com/r1ch029/abc/raw/master/img/image-20220112221511911.png" alt="成功"></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> phpstudy </tag>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
